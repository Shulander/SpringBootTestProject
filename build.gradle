buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '1.3.4.RELEASE'
	}
}
plugins {
	id 'com.gradle.build-receipt' version '1.1'
}
buildReceiptLicense {
	agreementUrl = 'https://gradle.com/terms-of-service'
	agree = 'yes'
}

apply plugin: 'java'
// apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'maven'
apply plugin: 'project-report'
apply plugin: 'build-dashboard'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'

version = '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8
jar {
	manifest {
		attributes 'Implementation-Title': 'Spring-boot Test Project',
				 'Implementation-Version': version
	}
}
uploadArchives {
	repositories {
		flatDir {
			dirs 'repos'
		}
	}
}

ext {
	guavaVersion = '19.0'
	jadiraVersion = '4.0.0.GA'
	swaggerVersion = '2.3.0'
	jacocoVersion = '0.7.6.201602180812'
	checkstyleVersion = '6.18'
}

repositories {
	jcenter()
	//	mavenCentral()
}

dependencies {
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

	compile group: 'org.springframework', name: 'spring-context-support'

	compile group: 'joda-time', name: 'joda-time'
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda'
	compile group: 'com.google.guava', name: 'guava', version: guavaVersion
	compile group: 'org.jadira.usertype', name: 'usertype.extended', version: jadiraVersion
	compile group: 'io.springfox', name: 'springfox-swagger2', version: swaggerVersion
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: swaggerVersion

	runtime group: 'org.hsqldb', name: 'hsqldb'
	runtime group: 'mysql', name: 'mysql-connector-java'

	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
}

// Jacoco Plugin
jacoco {
	toolVersion = jacocoVersion
}

jacocoTestReport {
	reports {
		html.enabled = true
		xml.enabled = true
		csv.enabled = true
	}
}

// finalizedBy executes jacocoTestReport after test task has finished
test.finalizedBy jacocoTestReport

checkstyle {
	toolVersion = checkstyleVersion
	config = rootProject.resources.text.fromFile('etc/checkstyle/rules.xml')
}